# Generated by Django 5.2.6 on 2025-10-10 13:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import forward_netbox.models
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0018_concrete_objecttype'),
        ('extras', '0133_make_cf_minmax_decimal'),
        ('netbox_branching', '0006_tag_object_types'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ForwardIngestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('branch', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='netbox_branching.branch')),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.job')),
            ],
            options={
                'verbose_name': 'Forward Networks Ingestion',
                'verbose_name_plural': 'Forward Networks Ingestions',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ForwardIngestionIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.TextField()),
                ('raw_data', models.TextField(blank=True, default='')),
                ('coalesce_fields', models.TextField(blank=True, default='')),
                ('defaults', models.TextField(blank=True, default='')),
                ('exception', models.TextField()),
                ('ingestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='forward_netbox.forwardingestion')),
            ],
            options={
                'verbose_name': 'Forward Networks Ingestion Issue',
                'verbose_name_plural': 'Forward Networks Ingestion Issues',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ForwardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('snapshot_id', models.CharField(max_length=100)),
                ('data', models.JSONField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('status', models.CharField(default='unloaded', max_length=50)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Forward Networks Snapshot',
                'verbose_name_plural': 'Forward Networks Snapshots',
                'ordering': ('source', '-date'),
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ForwardData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('data', models.JSONField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('snapshot_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fwd_data', to='forward_netbox.forwardsnapshot')),
            ],
        ),
        migrations.CreateModel(
            name='ForwardSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(default='local', max_length=50)),
                ('url', models.CharField(max_length=200)),
                ('network_id', models.CharField(blank=True, help_text='Optional Forward Networks network identifier used for API scoping.', max_length=100, null=True)),
                ('status', models.CharField(default='new', editable=False, max_length=50)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Forward Networks Source',
                'verbose_name_plural': 'Forward Networks Sources',
                'ordering': ('name',),
            },
            bases=(forward_netbox.models.ForwardClient, netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name='forwardsnapshot',
            name='source',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='forward_netbox.forwardsource'),
        ),
        migrations.CreateModel(
            name='ForwardSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(default='new', editable=False, max_length=50)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('auto_merge', models.BooleanField(default=False)),
                ('update_custom_fields', models.BooleanField(default=True)),
                ('last_synced', models.DateTimeField(blank=True, editable=False, null=True)),
                ('scheduled', models.DateTimeField(blank=True, null=True)),
                ('interval', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('snapshot_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='forward_netbox.forwardsnapshot')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Forward Networks Sync',
                'verbose_name_plural': 'Forward Networks Syncs',
                'ordering': ['pk'],
            },
            bases=(forward_netbox.models.ForwardClient, netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name='forwardingestion',
            name='sync',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forward_netbox.forwardsync'),
        ),
        migrations.CreateModel(
            name='ForwardTransformMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('source_model', models.CharField(max_length=50)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('target_model', models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'dcim'), ('model', 'site')), models.Q(('app_label', 'dcim'), ('model', 'manufacturer')), models.Q(('app_label', 'dcim'), ('model', 'platform')), models.Q(('app_label', 'dcim'), ('model', 'devicerole')), models.Q(('app_label', 'dcim'), ('model', 'devicetype')), models.Q(('app_label', 'dcim'), ('model', 'device')), models.Q(('app_label', 'dcim'), ('model', 'virtualchassis')), models.Q(('app_label', 'dcim'), ('model', 'interface')), models.Q(('app_label', 'dcim'), ('model', 'macaddress')), models.Q(('app_label', 'ipam'), ('model', 'vlan')), models.Q(('app_label', 'ipam'), ('model', 'vrf')), models.Q(('app_label', 'ipam'), ('model', 'prefix')), models.Q(('app_label', 'ipam'), ('model', 'ipaddress')), models.Q(('app_label', 'contenttypes'), ('model', 'contenttype')), models.Q(('app_label', 'tenancy'), ('model', 'tenant')), models.Q(('app_label', 'dcim'), ('model', 'inventoryitem')), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Forward Networks Transform Map',
                'verbose_name_plural': 'Forward Networks Transform Maps',
                'ordering': ('pk',),
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ForwardTransformField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('source_field', models.CharField(max_length=100)),
                ('target_field', models.CharField(max_length=100)),
                ('coalesce', models.BooleanField(default=False)),
                ('template', models.TextField(blank=True, default='')),
                ('transform_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_maps', to='forward_netbox.forwardtransformmap')),
            ],
            options={
                'verbose_name': 'Forward Networks Transform Field',
                'verbose_name_plural': 'Forward Networks Transform Fields',
                'ordering': ('transform_map',),
            },
        ),
        migrations.CreateModel(
            name='ForwardRelationshipField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('target_field', models.CharField(max_length=100)),
                ('coalesce', models.BooleanField(default=False)),
                ('template', models.TextField(blank=True, default='')),
                ('source_model', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'dcim'), ('app_label', 'ipam'), ('app_label', 'tenancy'), models.Q(('app_label', 'contenttypes'), ('model', 'contenttype')), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, related_name='forward_transform_fields', to='contenttypes.contenttype')),
                ('transform_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationship_maps', to='forward_netbox.forwardtransformmap')),
            ],
            options={
                'verbose_name': 'Forward Networks Relationship Field',
                'verbose_name_plural': 'Forward Networks Relationship Fields',
                'ordering': ('transform_map',),
            },
        ),
        migrations.CreateModel(
            name='ForwardTransformMapGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Forward Networks Transform Map Group',
                'verbose_name_plural': 'Forward Networks Transform Map Groups',
                'ordering': ('pk',),
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name='forwardtransformmap',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transform_maps', to='forward_netbox.forwardtransformmapgroup'),
        ),
    ]
