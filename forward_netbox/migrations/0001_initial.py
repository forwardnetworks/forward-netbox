# Generated by Django 5.2 on 2025-05-12 10:00

import django.core.validators
import django.db.models.deletion
import taggit.managers
import utilities.json
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0128_tableconfig'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ForwardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(editable=False)),
                ('snapshot_id', models.CharField(max_length=100)),
                ('data', models.JSONField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('status', models.CharField(default='unprocessed', max_length=50)),
            ],
            options={
                'verbose_name': 'Forward Snapshot',
                'verbose_name_plural': 'Forward Snapshots',
                'ordering': ('source', '-date'),
            },
        ),
        migrations.CreateModel(
            name='ForwardNQEMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('query_id', models.CharField(max_length=100)),
                ('netbox_model', models.ForeignKey(limit_choices_to=models.Q(('app_label__in', ['dcim', 'ipam'])), on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Forward NQE Map',
                'verbose_name_plural': 'Forward NQE Maps',
            },
        ),
        migrations.CreateModel(
            name='ForwardData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('data', models.JSONField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('snapshot_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fwd_data', to='forward_netbox.forwardsnapshot')),
            ],
        ),
        migrations.CreateModel(
            name='ForwardSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('url', models.CharField(max_length=200)),
                ('network_id', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(default='unprocessed', editable=False, max_length=50)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Forward Source',
                'verbose_name_plural': 'Forward Sources',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='forwardsnapshot',
            name='source',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='forward_netbox.forwardsource'),
        ),
        migrations.CreateModel(
            name='ForwardSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(default='dcim', max_length=50)),
                ('status', models.CharField(default='unprocessed', editable=False, max_length=50)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('auto_merge', models.BooleanField(default=False)),
                ('last_synced', models.DateTimeField(blank=True, editable=False, null=True)),
                ('scheduled', models.DateTimeField(blank=True, null=True)),
                ('interval', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('snapshot_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syncs', to='forward_netbox.forwardsnapshot')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Forward Sync',
                'ordering': ['pk'],
                'permissions': [('sync_ingest', 'Can run adhoc Forward Sync ingestion')],
            },
        ),
    ]
